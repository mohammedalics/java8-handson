package home.handson.java8.streams;

import java.util.stream.Stream;

public class StreamIterate {

	/**
	 * The iterate() method takes two arguments: a seed and a function.
	 * 
	 * A seed is the first element of the stream. The second element is
	 * generated by applying the function to the first element. The third
	 * element is generated by applying the function on the second element.
	 * 
	 * Therefore the elements are: seed, f(seed), f(f(seed)), f(f(f(seed)))....
	 * 
	 * The following code creates a stream of natural numbers:
	 * 
	 * Stream<Long> naturalNumbers = Stream.iterate(1L, n -> n + 1);
	 * 
	 * The limit(long maxSize) operation is an intermediate operation that
	 * produces another stream.
	 */

	public static void main(String[] args) {
		Stream.iterate(1L, n -> n + 1).limit(10).forEach(System.out::println);
		
	}

}
